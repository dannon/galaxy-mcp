name: Python Tests

on:
  push:
    branches: [main]
    paths:
      - "mcp-server-galaxy-py/**"
      - ".github/workflows/python-tests.yml"
  pull_request:
    branches: [main]
    paths:
      - "mcp-server-galaxy-py/**"
      - ".github/workflows/python-tests.yml"

defaults:
  run:
    working-directory: mcp-server-galaxy-py

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Create virtual environment
        run: |
          uv venv
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo ".venv/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install -r requirements.txt
          uv pip install -r requirements-test.txt
          uv pip install -e .

      - name: Lint with ruff
        run: |
          uv run ruff check .
          uv run ruff format --check .

      - name: Test with pytest
        run: |
          uv run pytest --cov=galaxy_mcp --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./mcp-server-galaxy-py/coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true

  type-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Create virtual environment
        run: |
          uv venv
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo ".venv/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install -r requirements.txt
          uv pip install mypy types-requests
          uv pip install -e .

      - name: Type check with mypy
        run: uv run mypy src/galaxy_mcp

  build:
    runs-on: ubuntu-latest
    needs: [test, type-check]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Create virtual environment
        run: |
          uv venv
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo ".venv/bin" >> $GITHUB_PATH

      - name: Install build dependencies
        run: uv pip install build

      - name: Build package
        run: uv run python -m build

      - name: Check built packages
        run: |
          ls -la dist/
          uv run twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: mcp-server-galaxy-py/dist/
